local map = vim.keymap.set
-- 函数：为 DAP 配置快捷键
-- --- --- --- --- DAP相关设置 --- --- --- ---
-- 切换断点 (F9)
map("n", "<F9>", "<cmd> DapToggleBreakpoint <CR>")
-- 继续执行（在断点处暂停后继续运行程序）(F5)
map("n", "<F5>", "<cmd> DapContinue <CR>")
-- 单步进入（进入函数内部）(F11)
map("n", "<F11>", "<cmd> DapStepInto <CR>")
-- 单步跳过（不进入函数，直接执行函数调用并跳到下一行）(F10)
map("n", "<F10>", "<cmd> DapStepOver <CR>")
-- 单步跳出（从当前函数内部跳出到调用该函数的下一行）(Shift+F11)
map("n", "<S-F11>", "<cmd> DapStepOut <CR>")
map("n", "<leader>dO", "<cmd> DapStepOut <CR>")
-- 重新开始调试会话 (Ctrl+F5)
map("n", "<C-w><F5>", "<cmd> DapRestart <CR>")
map("n", "<leader>dr", "<cmd> DapRestart <CR>")
-- 终止调试会话 (Shift+F5)
map("n", "<S-F5>", "<cmd> DapTerminate <CR>")
map("n", "<leader>dk", "<cmd> DapTerminate <CR>")
-- 显示变量的值（在调试时查看特定变量的值）(F12)
map("n", "<F12>", function()
    require('dap.ui.widgets').hover()
end)
-- --- --- --- --- DAP Python相关设置 --- --- --- ---
-- 运行当前Python文件的测试方法 (Ctrl+F9)
map("n", "<C-F9>", function()
    require('dap-python').test_method()
end)
map("n", "<leader>dpr", function()
    require('dap-python').test_method()
end)
-- 切换Python调试会话的日志级别（例如，用于查看更详细或更简略的调试信息）(Ctrl+Shift+F9)
map("n", "<C-S-F9>", function()
    local current_level = require('dap-python').get_log_level()
    local new_level = current_level == "DEBUG" and "INFO" or "DEBUG"
    require('dap-python').set_log_level(new_level)
end)
map("n", "<leader>dpl", function()
    local current_level = require('dap-python').get_log_level()
    local new_level = current_level == "DEBUG" and "INFO" or "DEBUG"
    require('dap-python').set_log_level(new_level)
end)

